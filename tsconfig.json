/* Этот файл используется для конфигурирования компилятора TS на моменте написания кода. Например, здесь можно определить ассоциация к путям, а потом использовать их в местах
импорта, без необходимости сборки проекта.*/
{
    "compilerOptions": {
      "outDir": "./dist/", // задаёт каталог для скомпилированных файлов
      "noImplicitAny": true, // если установлено значение true, TypeScript выдаст ошибку при использовании переменных типа any без явного указания типа
      "module": "ESNext",
      "target": "es5", // указывает, какой стандарт JavaScript будет применяться при компиляции
      "jsx": "react-jsx",
      // позволяет компилировать JavaScript-файлы в проекте. 25 Это может быть полезно, если нужно постепенно переходить на TypeScript или использовать сторонние библиотеки, написанные на JavaScript (обратная совместимость)
      "allowJs": true,
      // определяет, как TypeScript разрешает пути к модулям. Значение Node использует алгоритм Node.js для разрешения путей, а значение Classic — стандартный алгоритм разрешения модулей.
      "moduleResolution": "node",
      // esModuleInterop позволяет работать с пакетами, которые использует commonJs как с обычными пакетами с помощью
      // import (require() module.export) = common js
      // import Moment from 'moment';
      // пример работы кода:
      // 1. без флага esModuleInterop результат будет undefined (не смог импортировать):
      // console.log(Moment); // undefined
      // 2. с флагом esModuleInterop результат [Object object] (смог импортировать):
      // console.log(Moment); // [Object object]
      "esModuleInterop": true,
      // Если какая-либо библиотека не имеет default import, лоадеры вроде ts-loader или babel-loader автоматически создают их (определяют импорт по умолчанию)
      // вместо такого импорта → import * as React from 'react';
      // можно писать такой → import React from 'react';
      "allowSyntheticDefaultImports": true,
      "baseUrl": ".", // конкретный главный путь к папке наших модулей
      // Сообщаем TypeScript`у алиса исходной папки, где искать наши модули, по умолчанию src
      "paths": {
        "@/*": [ "./src/*" ] // здесь собачка будет заменяться ./src/, а звёздочка озночается любой указанный подпуть: @/pages/Shop → ./src/pages/Shop = будет искать папку Shop, и там файл index.ts
      }
    },
    "ts-node": { // для tsnode переопределяем compilerOptions, указав нужную ему модульную систему
        "compilerOptions": {
            "module": "CommonJS",
      }
    }
}